plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.2.0'
}

group = 'com.loan'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
}

jib {
    // 어떠한 base image를 기준으로 내가 만든 application에 대한 image를 생성할 것인지 정의
    from {
        image = "openjdk:11-jre-slim"
    }
    to {
        image = 'fintech-loan'
        tags = ['0.0.1']
    }
    container {
        // fintech-loan 서버에서 class path 를 정의
        mainClass = 'com.loan.loan.LoanApplication'
        creationTime = 'USE_CURRENT_TIMESTAMP'
        format = 'OCI'
        volumes = ['/var/tmp']
        // class path 를 같이 지정 해주어야함 -> 우리가 build 한 spring boot 의 class path 명시한다고 생각
        entrypoint = ['java'
                      , '-cp', '/app/resources:/app/classes:/app/libs/*'
        , 'com.loan.loan.LoanApplication']
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'mysql:mysql-connector-java'

    compileOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
